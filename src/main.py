# generoitu koodi alkaa
import pygame
import sys
from databaseservice import DatabaseService, Band

# Note:
# *** The following code is to demonstrate usage of PyGame based UI for application service access.
# The purpose of this code is to test service experience from the user's point of view.
# This code is generated by MS Copilot ***

pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
BG_COLOR = (30, 30, 30)
TEXT_COLOR = (255, 255, 255)
FONT = pygame.font.Font(None, 36)

# Initialize the screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Band Management")

# Initialize the database service
db_service = DatabaseService('soundslite_v1.db')

def draw_text(text, font, color, surface, x, y):
    textobj = font.render(text, 1, color)
    textrect = textobj.get_rect()
    textrect.topleft = (x, y)
    surface.blit(textobj, textrect)

def main():
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        screen.fill(BG_COLOR)

        # Add Band
        draw_text('Add Band: The Four Camels', FONT, TEXT_COLOR, screen, 20, 20)
        new_band = Band(bandgearbundle_id=1, bandname='The Four Camels', bandimage_path='/images/Four Camels.png', bandsocmedgroupname='Four Camels_group')
        db_service.add_band(new_band)
        draw_text('Band Added!', FONT, TEXT_COLOR, screen, 20, 60)

        # Get Band
        draw_text('Get Band: The Four Camels', FONT, TEXT_COLOR, screen, 20, 120)
        band = db_service.get_band_by_name('The Four Camels')
        if band:
            draw_text(f'Band Name: {band.bandname}', FONT, TEXT_COLOR, screen, 20, 160)
            draw_text(f'Band Image Path: {band.bandimage_path}', FONT, TEXT_COLOR, screen, 20, 200)
            draw_text(f'Social Media Group: {band.bandsocmedgroupname}', FONT, TEXT_COLOR, screen, 20, 240)
        else:
            draw_text('Band not found!', FONT, TEXT_COLOR, screen, 20, 160)
         # generoitu koodi päättyy. 

        pygame.display.update()

if __name__ == '__main__':
    main()
